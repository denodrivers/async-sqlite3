name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2

      - name: Install rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: nightly

      - uses: denoland/setup-deno@v1
        with:
          deno-version: canary

      - name: Install deno_bindgen
        run: deno install -Afq -n deno_bindgen https://raw.githubusercontent.com/littledivy/deno_bindgen/main/cli.ts

      - name: Build
        shell: bash
        run: |
          set -xeuo pipefail
          rustc --version
          cargo --version
          deno_bindgen --release

      - name: Test
        shell: bash
        run: make

      - name: Bench (Linux)
        shell: bash
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          cd bench
          echo -e "```" | tee bench.md
          make | tee -a bench.md
          echo -e "```" | tee bench.md

      - name: Get Pull Request
        uses: jwalton/gh-find-current-pr@v1
        if: startsWith(matrix.os, 'ubuntu')
        id: finder
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment Benchmarks
        uses: marocchino/sticky-pull-request-comment@v1
        if: startsWith(matrix.os, 'ubuntu')
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ steps.finder.outputs.pr }}
          path: bench/bench.md

      - name: Release
        uses: softprops/action-gh-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "release draft"
          draft: true
          files: |
            target/release/libdeno_sqlite3.so
            target/release/libdeno_sqlite3.dylib
            target/release/deno_sqlite3.dll

